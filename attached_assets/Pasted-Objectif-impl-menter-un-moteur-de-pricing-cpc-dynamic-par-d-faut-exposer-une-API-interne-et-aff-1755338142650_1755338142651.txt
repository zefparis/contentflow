Objectif : impl√©menter un moteur de pricing cpc_dynamic (par d√©faut), exposer une API interne et afficher l‚Äôoffre √† jour sur /partners + bar√®me sur /partners/earnings.

0) ENV (append-only)

.env.example ‚Äì ajoute ces lignes :

DEFAULT_EPC_EUR=0.25
OFFER_MODE=cpc_dynamic         # cpc_fixed | cpc_dynamic | revshare | hybrid
CPC_DEFAULT_EUR=0.10
CPC_MIN_EUR=0.06
CPC_MAX_EUR=0.12
REVSHARE_BASE_PCT=0.40         # 40% du revenu
CPC_SAFETY_MARGIN_EUR=0.05     # buffer marge & risques

1) Config (append-only)

app/config.py ‚Äì append dans la classe Settings :

class Settings(BaseSettings):
    # ...
    DEFAULT_EPC_EUR: float = 0.25
    OFFER_MODE: str = "cpc_dynamic"
    CPC_DEFAULT_EUR: float = 0.10
    CPC_MIN_EUR: float = 0.06
    CPC_MAX_EUR: float = 0.12
    REVSHARE_BASE_PCT: float = 0.40
    CPC_SAFETY_MARGIN_EUR: float = 0.05

2) Pricing engine (nouveau fichier)

app/services/pricing.py

import datetime as dt
from sqlalchemy import func
from app.db import SessionLocal
from app.config import settings
from app.models import MetricEvent

def _since(days:int): 
    return dt.datetime.utcnow() - dt.timedelta(days=7 if days<=0 else days)

def epc_7d(platform:str|None=None, niche:str|None=None) -> float:
    """EPC observ√© (‚Ç¨/clic) sur 7j; fallback DEFAULT_EPC_EUR si pas de data."""
    db = SessionLocal(); since = _since(7)
    q = db.query(
        func.coalesce(func.sum(MetricEvent.amount_eur), 0.0),
        func.coalesce(func.count(), 0)
    ).filter(MetricEvent.kind=="click", MetricEvent.ts>=since)
    if platform:
        q = q.filter(MetricEvent.platform==platform)
    total, n = q.first()
    if not n:
        return float(settings.DEFAULT_EPC_EUR)
    return float(total) / float(n)

def compute_cpc(epc: float) -> float:
    """CPC partenaire = clamp( epc * REVSHARE - buffer, [floor, ceiling] )."""
    base = epc * float(settings.REVSHARE_BASE_PCT)
    cpc = base - float(settings.CPC_SAFETY_MARGIN_EUR)
    cpc = max(float(settings.CPC_MIN_EUR), min(float(settings.CPC_MAX_EUR), cpc))
    # si data trop faible, fallback
    if cpc < settings.CPC_MIN_EUR + 0.001 and epc <= 0.15:
        cpc = float(settings.CPC_DEFAULT_EUR)
    return round(cpc, 2)

def current_offer() -> dict:
    mode = (settings.OFFER_MODE or "cpc_dynamic").lower()
    epc = epc_7d()
    if mode == "cpc_fixed":
        cpc = round(float(settings.CPC_DEFAULT_EUR), 2)
        return {"headline_cpc": cpc, "epc_7d": round(epc,2), "terms": {"mode": mode, "cpc": cpc}}
    if mode == "revshare":
        pct = float(settings.REVSHARE_BASE_PCT)
        return {"headline_cpc": round(epc * pct, 2), "epc_7d": round(epc,2), "terms": {"mode": mode, "revshare_pct": pct}}
    if mode == "hybrid":
        pct = float(settings.REVSHARE_BASE_PCT)
        fixed = float(settings.CPC_MIN_EUR)
        headline = round(max(fixed, epc * pct - settings.CPC_SAFETY_MARGIN_EUR), 2)
        return {"headline_cpc": headline, "epc_7d": round(epc,2), "terms": {"mode": mode, "fixed": fixed, "revshare_pct": pct}}
    # cpc_dynamic
    cpc = compute_cpc(epc)
    return {"headline_cpc": float(cpc), "epc_7d": round(epc,2), "terms": {"mode": "cpc_dynamic", "cpc": cpc}}

3) Landing /partners ‚Üí badge dynamique

Remplacement contr√¥l√© de la fonction (le reste du fichier ne bouge pas).

app/routes/partners_ui.py ‚Äì remplace uniquement la fonction partners_landing() par ceci (si le fichier n‚Äôexiste pas, cr√©e-le et ajoute la route) :

from fastapi import APIRouter, Query
from fastapi.responses import HTMLResponse
from app.config import settings
from app.services.pricing import current_offer

router = APIRouter(tags=["partners_ui"])  # s'il est d√©j√† d√©clar√©, ne duplique pas

@router.get("/partners")
def partners_landing():
    offer = current_offer()
    mode = offer["terms"]["mode"]
    is_rev = (mode == "revshare")
    badge = f"jusqu‚Äô√† ‚Ç¨{offer['headline_cpc']:.2f} par clic" if not is_rev else f"jusqu‚Äô√† ‚Ç¨{offer['headline_cpc']:.2f} indicatif"
    html = f"""
    <section style="max-width:960px;margin:40px auto;font-family:system-ui">
      <h1>Programme Partenaires</h1>
      <p>Mon√©tisez votre audience avec du contenu automatis√© par IA. Gagnez des revenus sans cr√©er de contenu.</p>
      <div style="display:flex;gap:10px;flex-wrap:wrap;margin:14px 0;">
        <span style="background:#E8F7EE;color:#0A7A3F;padding:8px 12px;border-radius:999px;">$ {badge}</span>
        <span style="background:#E7F0FF;color:#2B5BFF;padding:8px 12px;border-radius:999px;">‚Üó Paiements automatiques</span>
        <span style="background:#F5E8FF;color:#7B2FFF;padding:8px 12px;border-radius:999px;">üéÆ Leaderboard gamifi√©</span>
      </div>
      <form method="post" action="/partner/magic" style="margin:16px 0">
        <h3>Rejoindre le programme</h3>
        <input name="email" placeholder="votre@email.com" style="padding:8px;border:1px solid #ccc;width:320px">
        <button style="padding:8px 12px">Obtenir un lien d'acc√®s ‚Üí</button>
      </form>
      <small style="opacity:.7;">Mode: {mode}. EPC7j={offer['epc_7d']:.2f}‚Ç¨.</small>
      <p><a href="/partners/leaderboard">Voir le leaderboard</a> ¬∑ <a href="/partners/faq">FAQ</a></p>
    </section>
    """
    return HTMLResponse(html)

4) Earnings ‚Üí afficher le bar√®me courant (append-only)

Toujours dans app/routes/partners_ui.py, dans la route /partners/earnings (si pr√©sente), avant le return HTMLResponse(html), injecte :

from app.services.pricing import current_offer
offer = current_offer()
tarif = (f"{offer['terms'].get('cpc','?'):.2f}‚Ç¨/clic" 
         if offer["terms"]["mode"].startswith("cpc") 
         else f"{int(offer['terms'].get('revshare_pct',.4)*100)}% rev-share")
html = html.replace("</ul>", f"<li>Bar√®me actuel: <b>{tarif}</b></li></ul>")


(si la route n‚Äôexiste pas chez toi, skip cette √©tape)

5) (Optionnel) Autopilot ‚Üí log ‚Äúreprice‚Äù (append-only)

app/aiops/actions.py ‚Äì append en bas :

from app.services.pricing import current_offer
def act_reprice_offers(score: float = 0.6):
    off = current_offer()
    _log_action("REPRICE_OFFERS", None, off, score, executed=True, success=True)
ACTIONS.append(act_reprice_offers)


app/aiops/selector.py ‚Äì dans propose_actions(...), ajoute une ligne dans la liste retourn√©e :

("act_reprice_offers", base + 0.06),

6) Smoke tests (rapides)

uvicorn up ‚Üí visite /partners : le badge doit afficher ‚Äújusqu‚Äô√† ‚Ç¨X.XX par clic‚Äù (pas un montant fixe 0.20).

Change OFFER_MODE dans .env ‚Üí cpc_fixed/revshare/hybrid ‚Üí /partners refl√®te le mode.

/partners/earnings (connect√©) ‚Üí affiche Bar√®me actuel sous les m√©triques.

7) Notes

cpc_dynamic prot√®ge la marge : CPC partenaire = EPC_7j * REVSHARE_BASE_PCT ‚Äì CPC_SAFETY_MARGIN_EUR, born√© [CPC_MIN_EUR ; CPC_MAX_EUR].

Si pas encore de data ‚Üí fallback DEFAULT_EPC_EUR.

Tu peux tuner REVSHARE_BASE_PCT (0.35‚Äì0.5) et CPC_SAFETY_MARGIN_EUR (0.03‚Äì0.07) selon ton risque vs. volume.